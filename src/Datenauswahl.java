
import com.demo.tree.checkbox.SicherungsObjekt;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Peter Riehm
 */
public class Datenauswahl extends javax.swing.JFrame {

    private SicherungsObjekt neueSicherungQuellen;
    /**
     * Creates new form Datenauswahl
     */
    public Datenauswahl() {
        initComponents();
    }
    
    public Datenauswahl(SicherungsObjekt neueSicherung) {
        this();
        neueSicherungQuellen = neueSicherung;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OrdnerButton = new javax.swing.JButton();
        SicherungButton = new javax.swing.JButton();
        SpeicherButton = new javax.swing.JButton();
        Abbrechen = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tbZiel = new javax.swing.JTextField();
        Fortschritt = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Daten sichern");
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        OrdnerButton.setText("Ordner auswählen");
        OrdnerButton.setToolTipText("Ordner auswählen, die gesichert werden sollen...");
        OrdnerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ordnerauswaehlen(evt);
            }
        });

        SicherungButton.setText("Sicherung starten");
        SicherungButton.setToolTipText("Sicherung der ausgewählten Ordner an den ausgewählten Speicherort starten...");
        SicherungButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SicherungButtonActionPerformed(evt);
            }
        });

        SpeicherButton.setText("Speicherort auswählen");
        SpeicherButton.setToolTipText("Speicherort der Sicherung auswählen...");
        SpeicherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpeicherButtonActionPerformed(evt);
            }
        });

        Abbrechen.setText("Abbrechen");
        Abbrechen.setToolTipText("Sicherung abbrechen...");
        Abbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbbrechenActionPerformed(evt);
            }
        });

        jLabel1.setText("Schritt 1");

        jLabel2.setText("Schritt 2");

        jLabel3.setText("Schritt 3");

        tbZiel.setEnabled(false);

        jLabel4.setText("Fortschritt");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbZiel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Fortschritt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(Abbrechen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SicherungButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(21, 21, 21)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SpeicherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(OrdnerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OrdnerButton)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpeicherButton)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbZiel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Fortschritt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(SicherungButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Abbrechen)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Ordnerauswaehlen(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ordnerauswaehlen
        com.demo.tree.checkbox.FileTreeViewer ordnerwahl = new com.demo.tree.checkbox.FileTreeViewer(neueSicherungQuellen);
        ordnerwahl.setVisible(true);   
    }//GEN-LAST:event_Ordnerauswaehlen

    private void SpeicherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpeicherButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser ordnerwahlspeichern = new JFileChooser();
        ordnerwahlspeichern.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (neueSicherungQuellen.getZielpfad() != null && !"".equals(neueSicherungQuellen.getZielpfad().trim()))
        {
            ordnerwahlspeichern.setCurrentDirectory(new File(neueSicherungQuellen.getZielpfad()));
        }
        if (ordnerwahlspeichern.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            neueSicherungQuellen.setZielpfad(ordnerwahlspeichern.getSelectedFile().getPath());
            tbZiel.setText(neueSicherungQuellen.getZielpfad());
        }
    }//GEN-LAST:event_SpeicherButtonActionPerformed

    private void AbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbbrechenActionPerformed
        // TODO add your handling code here:
        setVisible(false); //you can't see me!
        dispose(); //Destroy the JFrame object
    }//GEN-LAST:event_AbbrechenActionPerformed

    private void SicherungButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SicherungButtonActionPerformed
        // TODO add your handling code here:
        if (neueSicherungQuellen.getQuellpfade().size() > 0 && !"".equals(neueSicherungQuellen.getZielpfad().trim()))
        {
            try {                
                Zippen zip = new Zippen();
                zip.macheZip(neueSicherungQuellen);
            } catch (Exception ex) {
                Logger.getLogger(Datenauswahl.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        else
        {
            if (neueSicherungQuellen.getQuellpfade().size() <= 0 && "".equals(neueSicherungQuellen.getZielpfad().trim()))
            {
                JOptionPane.showMessageDialog(null, "Bitte wählen Sie die Ordner aus, welche Sie sichern möchten, und den Speicherort, wohin Sie sichern möchten.", "Hinweis", JOptionPane.INFORMATION_MESSAGE); 
            }
            else if (neueSicherungQuellen.getQuellpfade().size() <= 0)
            {
                JOptionPane.showMessageDialog(null, "Bitte wählen Sie die Ordner aus, welche Sie sichern möchten.", "Hinweis", JOptionPane.INFORMATION_MESSAGE); 
            }
            else if ("".equals(neueSicherungQuellen.getZielpfad().trim()))
            {
                JOptionPane.showMessageDialog(null, "Bitte wählen Sie den Speicherort aus, wohin Sie sichern möchten.", "Hinweis", JOptionPane.INFORMATION_MESSAGE); 
            }
        }
    }//GEN-LAST:event_SicherungButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        // JFrame zentriert zum Parent positionieren:
        setLocationRelativeTo(getParent());
        
        if (neueSicherungQuellen.getZielpfad() != "")
        {
            tbZiel.setText(neueSicherungQuellen.getZielpfad());
        }
        tbZiel.setToolTipText(tbZiel.getText());
    }//GEN-LAST:event_formWindowOpened

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abbrechen;
    private javax.swing.JProgressBar Fortschritt;
    private javax.swing.JButton OrdnerButton;
    private javax.swing.JButton SicherungButton;
    private javax.swing.JButton SpeicherButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField tbZiel;
    // End of variables declaration//GEN-END:variables
}